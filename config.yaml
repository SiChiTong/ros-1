# Copyright 2020 by Murray Altheim. All rights reserved. This file is part of
# the Robot Operating System project and is released under the "Apache Licence, 
# Version 2.0". Please see the LICENSE file included as part of this package.
#
# YAML configuration for Robot Operating System (ROS) ..........................

flask:
    enabled: true                                # start flask web server?

pi:
    disable_leds: false                          # disable and re-enable Pi LEDs during operation?
    led_0_path:   '/sys/class/leds/led0/brightness'
    led_1_path:   '/sys/class/leds/led1/brightness'
    sudo_name:    'sudo'

ros:
    wait_for_button_press: false                 # robot waits in standby mode until red button is pressed
    enable_self_shutdown: false                  # enables the robot to shut itself down (not good during demos)
    main_loop_delay_ms:    100                   # main os loop (doesn't have effect on performance)
    battery:
        enable_messaging:  False                 # if true we enable low battery messages to be sent
    lidar:
#       min_angle: -45.0                         # minimum scan angle (clearance of bumper)
#       max_angle:  45.0                         # maximum scan angle (clearance of bumper)
        min_angle: -30.0                         # minimum scan angle (clearance of bumper)
        max_angle:  30.0                         # maximum scan angle (clearance of bumper)
        play_sound: False                        # if true, play 'ping' sound during scanning
#       degree_step: 5.0                         # resolution of scan
#       tof_range: 'medium'                      # ToF range: performance, long, medium or short
        degree_step: 2.0                         # resolution of scan
        step_delay_sec: 0.10                     # how long to linger at each degree step to permit a reading
        tof_range: 'performance'                 # ToF range: performance, long, medium or short
    wall_follower:
        port_angle: -90.0                        # port-facing scan angle
        starboard_angle: 90.0                    # starboard-facing scan angle
        tof_range: 'performance'                 # ToF range: performance, long, medium or short
        servo_number: 2                          # use this servo
    ultrasonic_scanner:
        min_angle: -90.0                         # minimum scan angle
        max_angle:  90.0                         # maximum scan angle
        degree_step: 5.0                         # resolution of scan
        use_raw_distance: True                   # use raw distance, faster than when filtered
        read_delay_sec: 0.3                      # how long to wait at position for reading
        servo_number: 2                          # use this servo
    cat_scan:
        active_angle:  -90.0                     # servo position with arm raised
        inactive_angle: 90.0                     # servo position with arm lowered
        pir_pin:      15                         # pin connected to PIR sensor
        servo_number: 3                          # use this servo
    servo1:
        center_offset: 0.0                       # used by lidar: offset necessary to center the servo at 0.0
    servo2:
        center_offset: 2.0                       # used by uscanner and wall follower: offset necessary to center the servo at 0.0
    servo3:
        center_offset: 0.0                       # offset necessary to center the servo at 0.0
    servo4:
        center_offset: 0.0                       # offset necessary to center the servo at 0.0
    button:
        pin:           24                        # pin connected to hardware button
        toggle:      True                        # toggle or momentary button
    bumper:
        port_pin:      21                        # pin connected to port bumper
        center_pin:    19                        # pin connected to center bumper
        starboard_pin: 13                        # pin connected to starboard bumper
        upper_pin:      7                        # pin connected to upper bumper
    infrared:
        port_pin:           6                    # pin connected to port infrared
        center_pin:         0                    # pin connected to center infrared (use zero if using LR IR)
        stbd_pin:          16                    # pin connected to starboard infrared
        port_side_pin:      5                    # pin connected to port side infrared
        stbd_side_pin:     12                    # pin connected to starboard side infrared
        use_long_range:    True                  # use analog long range IR for center instead of short range digital IR
    motors:
        # GPIO pins configured for A1, B1, A2 and B2
        rotary_encoder_a1_port: 22
        rotary_encoder_b1_port: 17
        rotary_encoder_a2_stbd: 27
        rotary_encoder_b2_stbd: 18
        reverse_motor_orientation:   False       # in case you wire something up backwards
        reverse_encoder_orientation: True        # ditto
        sample_rate: 10                          # how many pulses per encoder measurement?
        velocity_fudge_factor: 14.0              # convert raw velocity to approximate a percentage
        max_power_limit: 1.0                     # limit set on power sent to motors
        accel_loop_delay_sec: 0.10
        pid:
            enable_slew:    True
            slew_limit:     15.0
            enable_p:       True
            enable_i:       False
            enable_d:       True
            kp:             0.0016
            ki:             0.0010
            kd:             0.00010
            sample_time_ms: 20
    slewlimiter:
        rate_limit: 0.100  # value change permitted per millisecond

    filewriter:
        extension: '.dat'                        # file extension (must include the dot)
        directory_name: 'data'                   # output directory name
        default_filename_prefix: 'motors'        # output directory name
        gnuplot_template_file: 'settings_pid_template.gp'  # template for gnuplot settings
        gnuplot_output_file: 'settings_pid.gp'   # output file for gnuplot settings
    features:
        ht0740: False
        placeholder: ''

